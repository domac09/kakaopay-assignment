buildscript {

    ext {
        springBootVersion = '2.2.2.RELEASE'
        querydslPluginVersion = '1.0.10'
        lombokVersion = '1.18.10'
    }

    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}"
    }
}

def javaProjects = [project(':agreement-support-api')]

configure(javaProjects) {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: "io.spring.dependency-management"

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        implementation('org.springframework.boot:spring-boot-starter-data-jpa')

        compileOnly('org.projectlombok:lombok')
        annotationProcessor("org.projectlombok:lombok")

        annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")

        compile('com.h2database:h2')
        compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
        compile('com.google.code.gson:gson:2.8.6')
        implementation('com.auth0:java-jwt:3.8.3')
        compile('commons-codec:commons-codec:1.13')


        testCompileOnly("org.projectlombok:lombok")
        testAnnotationProcessor("org.projectlombok:lombok")
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude module: 'junit'
        }
        testImplementation('org.junit.jupiter:junit-jupiter-api')
        testImplementation("org.junit.platform:junit-platform-runner")
        testCompile('org.junit.jupiter:junit-jupiter-params')
        testRuntime('org.junit.jupiter:junit-jupiter-engine')
        testCompile('org.mockito:mockito-core')
        testCompile('org.projectlombok:lombok')
        testImplementation("org.hamcrest:hamcrest-library")
        testImplementation("org.hamcrest:hamcrest-core")

        test {
            useJUnitPlatform()
        }
    }
}